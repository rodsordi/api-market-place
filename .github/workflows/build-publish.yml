name: Build Publish
on:
  push:
    branches: ['master']
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout do repositório
      uses: actions/checkout@v4

    - name: Configura jdk
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        architecture: x64
        cache: maven

    - name: Executa testes com Maven
      run: mvn test

    - name: Empacota artefato com Maven
      run: mvn package -DskipTests

    - name: Prepara o artefato para upload
      run: mkdir staging && cp application/target/*.jar staging

    - name: Executa upload do artefato
      uses: actions/cache@v3
      with:
        key: package
        path: .

  publish_to_registry:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Download do artefato
        uses: actions/cache@v3
        with:
          key: package
          path: .

      - name: Login em Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extrai metadata (tags, labels) do Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: rodsordi/api-market-place

      - name: Constroi e envia imagem Docker
        id: push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: rodsordi/api-market-place:1.0
          labels: ${{ steps.meta.outputs.labels }}

      - name: Gera atestado do artifact
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: index.docker.io/rodsordi/api-market-place
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

  integration_tests:
    needs: [publish_to_registry]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Configura jdk
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          architecture: x64
          cache: maven

      - name: Executa testes integrados com Maven
        run: mvn test -DintegrationTests